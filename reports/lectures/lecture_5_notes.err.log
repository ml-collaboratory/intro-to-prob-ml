Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#total number of gibbs samples
N = 1000
#observation
y = 1.
#inverse gamma prior
alpha = 2.
beta = 3.
#normal prior
s = 1.
m = 2.

#initialize the gibbs sampler
current_mu = 0.
current_sigma_sq = 1. 
posterior_samples = [(current_mu, current_sigma_sq)]

#run gibbs N times
for n in range(N):
    #sample mu from the posterior conditioned on the current sigma squared
    next_mu = np.random.normal((s**2 * y) / (s**2 + current_sigma_sq), s**2 * current_sigma_sq)
    #sample sigma squared from the posterior conditioned on the updated mu
    next_sigma_sq = sp.stats.invgamma.rvs(alpha + 0.5, scale=1. / ((y - current_mu)**2 / 2. + beta), size=1)
    #the next sample is the updated mu and sigma squared
    current_mu = next_mu
    current_sigma_sq = next_sigma_sq
    posterior_samples.append((current_mu, current_sigma_sq))
    
posterior_samples = np.array(posterior_samples)[100:, :]
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[9], line 28[0m
[1;32m     25[0m     current_sigma_sq [38;5;241m=[39m next_sigma_sq
[1;32m     26[0m     posterior_samples[38;5;241m.[39mappend((current_mu, current_sigma_sq))
[0;32m---> 28[0m posterior_samples [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43marray[49m[43m([49m[43mposterior_samples[49m[43m)[49m[[38;5;241m100[39m:, :]

[0;31mValueError[0m: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (1001, 2) + inhomogeneous part.

